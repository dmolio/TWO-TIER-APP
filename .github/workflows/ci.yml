name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: P@ssw0rd
          MYSQL_DATABASE: sql_login
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install Dependencies
      working-directory: ./APP-CODE/node_project
      run: npm install
        
    - name: Run Tests
      working-directory: ./APP-CODE/node_project
      env:
        DATABASE_HOST: localhost
        DATABASE_USER: root
        DATABASE_PASSWORD: P@ssw0rd
        DATABASE: sql_login
      run: npm test
        
    - name: Build Docker image
      working-directory: ./APP-CODE/node_project
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker buildx build \
          -t ${{ secrets.DOCKER_USERNAME }}/nodeapp:${{ github.sha }} \
          -f Dockerfile .
        
    - name: Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKER_USERNAME }}/nodeapp:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL'
        
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Push to DockerHub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/nodeapp:${{ github.sha }}

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Check Docker Buildx Version
      run: docker buildx version